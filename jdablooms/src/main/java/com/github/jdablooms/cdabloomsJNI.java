/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.github.jdablooms;

public class cdabloomsJNI {
  public final static native void MurmurHash3_x64_128(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native String dablooms_version();
  public final static native void bytearray_t_size_set(long jarg1, bytearray_t jarg1_, long jarg2);
  public final static native long bytearray_t_size_get(long jarg1, bytearray_t jarg1_);
  public final static native void bytearray_t_array_set(long jarg1, bytearray_t jarg1_, String jarg2);
  public final static native String bytearray_t_array_get(long jarg1, bytearray_t jarg1_);
  public final static native long new_bytearray_t();
  public final static native void delete_bytearray_t(long jarg1);
  public final static native void bitmap_t_bytes_set(long jarg1, bitmap_t jarg1_, long jarg2);
  public final static native long bitmap_t_bytes_get(long jarg1, bitmap_t jarg1_);
  public final static native void bitmap_t_fd_set(long jarg1, bitmap_t jarg1_, int jarg2);
  public final static native int bitmap_t_fd_get(long jarg1, bitmap_t jarg1_);
  public final static native void bitmap_t_array_set(long jarg1, bitmap_t jarg1_, String jarg2);
  public final static native String bitmap_t_array_get(long jarg1, bitmap_t jarg1_);
  public final static native long new_bitmap_t();
  public final static native void delete_bitmap_t(long jarg1);
  public final static native long bitmap_resize(long jarg1, bitmap_t jarg1_, long jarg2, long jarg3);
  public final static native long new_bitmap(int jarg1, long jarg2);
  public final static native int bitmap_increment(long jarg1, bitmap_t jarg1_, long jarg2, int jarg3);
  public final static native int bitmap_decrement(long jarg1, bitmap_t jarg1_, long jarg2, int jarg3);
  public final static native int bitmap_check(long jarg1, bitmap_t jarg1_, long jarg2, int jarg3);
  public final static native int bitmap_flush(long jarg1, bitmap_t jarg1_);
  public final static native void free_bitmap(long jarg1, bitmap_t jarg1_);
  public final static native void counting_bloom_header_t_id_set(long jarg1, counting_bloom_header_t jarg1_, long jarg2);
  public final static native long counting_bloom_header_t_id_get(long jarg1, counting_bloom_header_t jarg1_);
  public final static native void counting_bloom_header_t_count_set(long jarg1, counting_bloom_header_t jarg1_, long jarg2);
  public final static native long counting_bloom_header_t_count_get(long jarg1, counting_bloom_header_t jarg1_);
  public final static native void counting_bloom_header_t__pad_set(long jarg1, counting_bloom_header_t jarg1_, long jarg2);
  public final static native long counting_bloom_header_t__pad_get(long jarg1, counting_bloom_header_t jarg1_);
  public final static native long new_counting_bloom_header_t();
  public final static native void delete_counting_bloom_header_t(long jarg1);
  public final static native void counting_bloom_t_header_set(long jarg1, counting_bloom_t jarg1_, long jarg2, counting_bloom_header_t jarg2_);
  public final static native long counting_bloom_t_header_get(long jarg1, counting_bloom_t jarg1_);
  public final static native void counting_bloom_t_capacity_set(long jarg1, counting_bloom_t jarg1_, long jarg2);
  public final static native long counting_bloom_t_capacity_get(long jarg1, counting_bloom_t jarg1_);
  public final static native void counting_bloom_t_offset_set(long jarg1, counting_bloom_t jarg1_, int jarg2);
  public final static native int counting_bloom_t_offset_get(long jarg1, counting_bloom_t jarg1_);
  public final static native void counting_bloom_t_counts_per_func_set(long jarg1, counting_bloom_t jarg1_, long jarg2);
  public final static native long counting_bloom_t_counts_per_func_get(long jarg1, counting_bloom_t jarg1_);
  public final static native void counting_bloom_t_hashes_set(long jarg1, counting_bloom_t jarg1_, long jarg2);
  public final static native long counting_bloom_t_hashes_get(long jarg1, counting_bloom_t jarg1_);
  public final static native void counting_bloom_t_nfuncs_set(long jarg1, counting_bloom_t jarg1_, long jarg2);
  public final static native long counting_bloom_t_nfuncs_get(long jarg1, counting_bloom_t jarg1_);
  public final static native void counting_bloom_t_size_set(long jarg1, counting_bloom_t jarg1_, long jarg2);
  public final static native long counting_bloom_t_size_get(long jarg1, counting_bloom_t jarg1_);
  public final static native void counting_bloom_t_num_bytes_set(long jarg1, counting_bloom_t jarg1_, long jarg2);
  public final static native long counting_bloom_t_num_bytes_get(long jarg1, counting_bloom_t jarg1_);
  public final static native void counting_bloom_t_error_rate_set(long jarg1, counting_bloom_t jarg1_, double jarg2);
  public final static native double counting_bloom_t_error_rate_get(long jarg1, counting_bloom_t jarg1_);
  public final static native void counting_bloom_t_bitmap_set(long jarg1, counting_bloom_t jarg1_, long jarg2, bitmap_t jarg2_);
  public final static native long counting_bloom_t_bitmap_get(long jarg1, counting_bloom_t jarg1_);
  public final static native long new_counting_bloom_t();
  public final static native void delete_counting_bloom_t(long jarg1);
  public final static native int free_counting_bloom(long jarg1, counting_bloom_t jarg1_);
  public final static native long new_counting_bloom(long jarg1, double jarg2, String jarg3);
  public final static native long new_counting_bloom_from_file(long jarg1, double jarg2, String jarg3);
  public final static native int counting_bloom_add(long jarg1, counting_bloom_t jarg1_, String jarg2, long jarg3);
  public final static native int counting_bloom_remove(long jarg1, counting_bloom_t jarg1_, String jarg2, long jarg3);
  public final static native int counting_bloom_check(long jarg1, counting_bloom_t jarg1_, String jarg2, long jarg3);
  public final static native void scaling_bloom_header_t_max_id_set(long jarg1, scaling_bloom_header_t jarg1_, long jarg2);
  public final static native long scaling_bloom_header_t_max_id_get(long jarg1, scaling_bloom_header_t jarg1_);
  public final static native void scaling_bloom_header_t_mem_seqnum_set(long jarg1, scaling_bloom_header_t jarg1_, long jarg2);
  public final static native long scaling_bloom_header_t_mem_seqnum_get(long jarg1, scaling_bloom_header_t jarg1_);
  public final static native void scaling_bloom_header_t_disk_seqnum_set(long jarg1, scaling_bloom_header_t jarg1_, long jarg2);
  public final static native long scaling_bloom_header_t_disk_seqnum_get(long jarg1, scaling_bloom_header_t jarg1_);
  public final static native long new_scaling_bloom_header_t();
  public final static native void delete_scaling_bloom_header_t(long jarg1);
  public final static native void scaling_bloom_t_header_set(long jarg1, scaling_bloom_t jarg1_, long jarg2, scaling_bloom_header_t jarg2_);
  public final static native long scaling_bloom_t_header_get(long jarg1, scaling_bloom_t jarg1_);
  public final static native void scaling_bloom_t_capacity_set(long jarg1, scaling_bloom_t jarg1_, long jarg2);
  public final static native long scaling_bloom_t_capacity_get(long jarg1, scaling_bloom_t jarg1_);
  public final static native void scaling_bloom_t_num_blooms_set(long jarg1, scaling_bloom_t jarg1_, long jarg2);
  public final static native long scaling_bloom_t_num_blooms_get(long jarg1, scaling_bloom_t jarg1_);
  public final static native void scaling_bloom_t_num_bytes_set(long jarg1, scaling_bloom_t jarg1_, long jarg2);
  public final static native long scaling_bloom_t_num_bytes_get(long jarg1, scaling_bloom_t jarg1_);
  public final static native void scaling_bloom_t_error_rate_set(long jarg1, scaling_bloom_t jarg1_, double jarg2);
  public final static native double scaling_bloom_t_error_rate_get(long jarg1, scaling_bloom_t jarg1_);
  public final static native void scaling_bloom_t_fd_set(long jarg1, scaling_bloom_t jarg1_, int jarg2);
  public final static native int scaling_bloom_t_fd_get(long jarg1, scaling_bloom_t jarg1_);
  public final static native void scaling_bloom_t_blooms_set(long jarg1, scaling_bloom_t jarg1_, long jarg2);
  public final static native long scaling_bloom_t_blooms_get(long jarg1, scaling_bloom_t jarg1_);
  public final static native void scaling_bloom_t_bitmap_set(long jarg1, scaling_bloom_t jarg1_, long jarg2, bitmap_t jarg2_);
  public final static native long scaling_bloom_t_bitmap_get(long jarg1, scaling_bloom_t jarg1_);
  public final static native long new_scaling_bloom_t();
  public final static native void delete_scaling_bloom_t(long jarg1);
  public final static native long new_scaling_bloom(long jarg1, double jarg2, String jarg3);
  public final static native long new_scaling_bloom_from_file(long jarg1, double jarg2, String jarg3);
  public final static native int free_scaling_bloom(long jarg1, scaling_bloom_t jarg1_);
  public final static native int scaling_bloom_count(long jarg1, scaling_bloom_t jarg1_);
  public final static native int scaling_bloom_add(long jarg1, scaling_bloom_t jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native int scaling_bloom_remove(long jarg1, scaling_bloom_t jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native int scaling_bloom_check(long jarg1, scaling_bloom_t jarg1_, String jarg2, long jarg3);
  public final static native int scaling_bloom_add_bytes(long jarg1, scaling_bloom_t jarg1_, byte[] jarg2, long jarg3);
  public final static native int scaling_bloom_remove_bytes(long jarg1, scaling_bloom_t jarg1_, byte[] jarg2, long jarg3);
  public final static native int scaling_bloom_check_bytes(long jarg1, scaling_bloom_t jarg1_, byte[] jarg2);
  public final static native int scaling_bloom_flush(long jarg1, scaling_bloom_t jarg1_);
  public final static native long scaling_bloom_mem_seqnum(long jarg1, scaling_bloom_t jarg1_);
  public final static native long scaling_bloom_disk_seqnum(long jarg1, scaling_bloom_t jarg1_);
}
